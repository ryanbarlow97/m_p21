name: Track Commits to SQLite

on:
  push:
    branches:
      - main

jobs:
  log_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install SQLite
        run: sudo apt-get install sqlite3 -y

      - name: Extract commit info and update database
        run: |
          set -e  # Stop on error

          DB="commits_log.sqlite"
          SHA=$(git rev-parse HEAD)
          AUTHOR=$(git log -1 --format="%an")
          EMAIL=$(git log -1 --format="%ae")
          DATE=$(git log -1 --format="%ad" --date=iso)
          FILES=$(git diff-tree --no-commit-id --name-only -r $SHA | paste -sd ";" -)

          echo "SHA=$SHA"
          echo "Author=$AUTHOR"
          echo "Email=$EMAIL"
          echo "Date=$DATE"
          echo "Files=$FILES"

          # Always ensure the table exists, even if the DB already does
          sqlite3 "$DB" "CREATE TABLE IF NOT EXISTS commits (
            sha TEXT PRIMARY KEY,
            author TEXT,
            email TEXT,
            timestamp TEXT,
            files TEXT
          );"

          # Skip empty commits (e.g., merge commits with no changed files)
          if [ -z "$FILES" ]; then
            echo "No files changed â€” skipping insert."
            exit 0
          fi

          echo "Inserting commit row..."
          sqlite3 "$DB" "INSERT OR IGNORE INTO commits
            (sha, author, email, timestamp, files)
            VALUES (
              '$SHA',
              '$AUTHOR',
              '$EMAIL',
              '$DATE',
              '$FILES'
            );"

      - name: Commit updated SQLite file
        run: |
          git config user.name "auto-tracker"
          git config user.email "tracker@yourorg.com"
          git add commits_log.sqlite
          git diff --cached --quiet || git commit -m "Auto-update commit tracker: $SHA"
          git push "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
